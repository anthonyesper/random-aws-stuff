schemaVersion: '0.3'
description: Install, update, or remove the datadog agent.
parameters:
  apikey:
    description: Adds the Datadog API KEY to the configuration file.
    type: String
    allowedPattern: ([a-zA-Z0-9]+)?
    default: xyz
  AutomationAssumeRole:
    type: String
    description: "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf."
mainSteps:
    - precondition:
        StringEquals:
        - platformType
        - Linux
    runCommand:
        - DD_API_KEY={{ apikey }} DD_SITE="datadoghq.com"  bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"
        - echo 'process_config:' | sudo tee -a /etc/datadog-agent/datadog.yaml
        - echo '  enabled: true' | sudo tee -a /etc/datadog-agent/datadog.yaml
        - sudo usermod -a -G systemd-journal dd-agent
        - echo 'logs:' | sudo tee -a /etc/datadog-agent/conf.d/journald.d/conf.yaml
        - echo '  - type: journald' | sudo tee -a /etc/datadog-agent/conf.d/journald.d/conf.yaml
        - echo '    enabled: true' | sudo tee -a /etc/datadog-agent/conf.d/journald.d/conf.yaml
        - echo '    service: journald' | sudo tee -a /etc/datadog-agent/conf.d/journald.d/conf.yaml
        - echo '    source: journal' | sudo tee -a /etc/datadog-agent/conf.d/journald.d/conf.yaml
        - echo '    sourcecategory: systemd' | sudo tee -a /etc/datadog-agent/conf.d/journald.d/conf.yaml
        - sudo systemctl restart datadog-agent
    name: linux-run
    action: aws:runShellScript
    inputs: null
    - precondition: null
    StringEquals:
        - platformType
        - Windows
    runCommand:
        - |
        # Download agent
        (Invoke-WebRequest https://s3.amazonaws.com/ddagent-windows-stable/datadog-agent-7-latest.amd64.msi -OutFile c:\datadog-agent-7-latest.amd64.msi)

        # Start the Datadog agent
        (Start-Process -Wait msiexec -ArgumentList '/qn /i c:\datadog-agent-7-latest.amd64.msi APIKEY={{ apikey }}')

        # Enable logs and live process 
        ((Get-Content -path C:\ProgramData\Datadog\datadog.yaml -Raw) -replace '# logs_enabled: false','logs_enabled: true') | Set-Content -Path C:\ProgramData\Datadog\datadog.yaml 
        (Add-Content C:\ProgramData\Datadog\datadog.yaml "`nprocess_config:`n  enabled: true" )
        (Add-Content C:\ProgramData\Datadog\datadog.yaml "`nec2_prefer_imdsv2: true" )

        # Configure win32_event_log 
        echo "init_config:
        instances:
            - type:
                - Information
                - Critical
                - Error
                - Warning
                - Information
                - Audit Failure
                - Audit Success
                log_file:
                - Application
                - System
                - Security
                - Application
                - Setup
                - Symantec Endpoint Protection Client
        logs:
            - type: windows_event
            channel_path: Application
            source: Application
            service: Application
            sourcecategory: windowsevent

            - type: windows_event
            channel_path: Security
            source: Security
            service: Security
            sourcecategory: windowsevent

            - type: windows_event
            channel_path: System
            source: System
            service: System
            sourcecategory: windowsevent

            - type: windows_event
            channel_path: Setup
            source: Setup
            service: Setup
            sourcecategory: windowsevent" > C:\ProgramData\Datadog\conf.d\win32_event_log.d\conf.yaml

        #Reboot Agent
        (Start-Process -FilePath "C:\Program Files\Datadog\Datadog Agent\bin\agent.exe" -ArgumentList "restart-service")
    name: windows-run
    action: aws:runPowerShellScript
    inputs: null
